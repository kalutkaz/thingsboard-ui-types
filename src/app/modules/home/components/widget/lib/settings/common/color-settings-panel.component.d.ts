import { EventEmitter, OnInit } from '@angular/core';
import { PageComponent } from '../../../../../../../../../../thingsboard/ui-ngx/src/app/shared/components/page.component';
import { ColorSettings, ColorType } from '../../../../../../../../../../thingsboard/ui-ngx/src/app/shared/models/widget-settings.models';
import { TbPopoverComponent } from '../../../../../../../../../../thingsboard/ui-ngx/src/app/shared/components/popover.component';
import { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';
import { Store } from '@ngrx/store';
import { AppState } from '../../../../../../../../../../thingsboard/ui-ngx/src/app/core/core.state';
import { WidgetService } from '../../../../../../../../../../thingsboard/ui-ngx/src/app/core/http/widget.service';
import { ColorSettingsComponent } from '../../../../../../../../../../thingsboard/ui-ngx/src/app/modules/home/components/widget/lib/settings/common/color-settings.component';
import * as i0 from "@angular/core";
export declare class ColorSettingsPanelComponent extends PageComponent implements OnInit {
    private fb;
    private widgetService;
    protected store: Store<AppState>;
    colorSettings: ColorSettings;
    popover: TbPopoverComponent<ColorSettingsPanelComponent>;
    settingsComponents: ColorSettingsComponent[];
    colorSettingsApplied: EventEmitter<ColorSettings>;
    colorType: typeof ColorType;
    colorTypes: ColorType[];
    colorTypeTranslationsMap: Map<ColorType, string>;
    colorSettingsFormGroup: UntypedFormGroup;
    functionScopeVariables: string[];
    constructor(fb: UntypedFormBuilder, widgetService: WidgetService, store: Store<AppState>);
    ngOnInit(): void;
    copyColorSettings(comp: ColorSettingsComponent): void;
    cancel(): void;
    applyColorSettings(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ColorSettingsPanelComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ColorSettingsPanelComponent, "tb-color-settings-panel", never, { "colorSettings": "colorSettings"; "popover": "popover"; "settingsComponents": "settingsComponents"; }, { "colorSettingsApplied": "colorSettingsApplied"; }, never, never, false, never>;
}
