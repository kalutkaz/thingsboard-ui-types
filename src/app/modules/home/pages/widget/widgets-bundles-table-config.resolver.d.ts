import { Resolve, Router } from '@angular/router';
import { EntityTableConfig } from '../../../../../../../thingsboard/ui-ngx/src/app/modules/home/models/entity/entities-table-config.models';
import { TranslateService } from '@ngx-translate/core';
import { DatePipe } from '@angular/common';
import { EntityAction } from '../../../../../../../thingsboard/ui-ngx/src/app/modules/home/models/entity/entity-component.models';
import { WidgetsBundle } from '../../../../../../../thingsboard/ui-ngx/src/app/shared/models/widgets-bundle.model';
import { WidgetService } from '../../../../../../../thingsboard/ui-ngx/src/app/core/http/widget.service';
import { Store } from '@ngrx/store';
import { AppState } from '../../../../../../../thingsboard/ui-ngx/src/app/core/core.state';
import { Authority } from '../../../../../../../thingsboard/ui-ngx/src/app/shared/models/authority.enum';
import { DialogService } from '../../../../../../../thingsboard/ui-ngx/src/app/core/services/dialog.service';
import { ImportExportService } from '../../../../../../../thingsboard/ui-ngx/src/app/modules/home/components/import-export/import-export.service';
import * as i0 from "@angular/core";
export declare class WidgetsBundlesTableConfigResolver implements Resolve<EntityTableConfig<WidgetsBundle>> {
    private store;
    private dialogService;
    private widgetsService;
    private translate;
    private importExport;
    private datePipe;
    private router;
    private readonly config;
    constructor(store: Store<AppState>, dialogService: DialogService, widgetsService: WidgetService, translate: TranslateService, importExport: ImportExportService, datePipe: DatePipe, router: Router);
    resolve(): EntityTableConfig<WidgetsBundle>;
    isWidgetsBundleEditable(widgetsBundle: WidgetsBundle, authority: Authority): boolean;
    importWidgetsBundle($event: Event): void;
    openWidgetsBundle($event: Event, widgetsBundle: WidgetsBundle): void;
    exportWidgetsBundle($event: Event, widgetsBundle: WidgetsBundle): void;
    onWidgetsBundleAction(action: EntityAction<WidgetsBundle>): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<WidgetsBundlesTableConfigResolver, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<WidgetsBundlesTableConfigResolver>;
}
