import { OnInit } from '@angular/core';
import { Store } from '@ngrx/store';
import { AppState } from '../../../../../../../thingsboard/ui-ngx/src/app/core/core.state';
import { PageComponent } from '../../../../../../../thingsboard/ui-ngx/src/app/shared/components/page.component';
import { AuthUser } from '../../../../../../../thingsboard/ui-ngx/src/app/shared/models/user.model';
import { WidgetsBundle } from '../../../../../../../thingsboard/ui-ngx/src/app/shared/models/widgets-bundle.model';
import { ActivatedRoute, Router } from '@angular/router';
import { Widget } from '../../../../../../../thingsboard/ui-ngx/src/app/shared/models/widget.models';
import { WidgetService } from '../../../../../../../thingsboard/ui-ngx/src/app/core/http/widget.service';
import { DialogService } from '../../../../../../../thingsboard/ui-ngx/src/app/core/services/dialog.service';
import { FooterFabButtons } from '../../../../../../../thingsboard/ui-ngx/src/app/shared/components/footer-fab-buttons.component';
import { DashboardCallbacks, IDashboardComponent, WidgetsData } from '../../../../../../../thingsboard/ui-ngx/src/app/modules/home/models/dashboard-component.models';
import { IAliasController } from '../../../../../../../thingsboard/ui-ngx/src/app/core/api/widget-api.models';
import { MatDialog } from '@angular/material/dialog';
import { TranslateService } from '@ngx-translate/core';
import { ImportExportService } from '../../../../../../../thingsboard/ui-ngx/src/app/modules/home/components/import-export/import-export.service';
import { UtilsService } from '../../../../../../../thingsboard/ui-ngx/src/app/core/services/utils.service';
import { EntityService } from '../../../../../../../thingsboard/ui-ngx/src/app/core/http/entity.service';
import * as i0 from "@angular/core";
export declare class WidgetLibraryComponent extends PageComponent implements OnInit {
    protected store: Store<AppState>;
    private route;
    private router;
    private widgetService;
    private dialogService;
    private importExport;
    private dialog;
    private translate;
    private utils;
    private entityService;
    authUser: AuthUser;
    isReadOnly: boolean;
    widgetsBundle: WidgetsBundle;
    widgetsData: WidgetsData;
    footerFabButtons: FooterFabButtons;
    dashboardCallbacks: DashboardCallbacks;
    aliasController: IAliasController;
    dashboard: IDashboardComponent;
    constructor(store: Store<AppState>, route: ActivatedRoute, router: Router, widgetService: WidgetService, dialogService: DialogService, importExport: ImportExportService, dialog: MatDialog, translate: TranslateService, utils: UtilsService, entityService: EntityService);
    ngOnInit(): void;
    addWidgetType($event: Event): void;
    importWidgetType($event: Event): void;
    private reload;
    openWidgetType($event: Event, widget?: Widget): void;
    exportWidgetType($event: Event, widget: Widget): void;
    removeWidgetType($event: Event, widget: Widget): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<WidgetLibraryComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<WidgetLibraryComponent, "tb-widget-library", never, {}, {}, never, never, false, never>;
}
